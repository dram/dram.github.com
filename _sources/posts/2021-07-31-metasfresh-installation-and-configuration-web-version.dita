<?xml version="1.0"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA 2.0 Topic//EN" "topic.dtd">
<topic id="post" xml:lang="zh-cn">
  <title>metasfresh安装配置（Web版）</title>
  <body>
    <p>本文简要描述在Ubuntu 20.04中安装metasfresh的Web端的基本流程，如果需要使用Swing客户端，可以参考<xref href="/blog/2021/07/18/metasfresh-installation-and-configuration.html" scope="peer">这里</xref>。相较于之前的安装说明，本文中没有引入Aapche HTTP服务。</p>
    <p>注意：metasfresh当前版本只支持Java 8，不支持更高版本，以下默认系统已经安装相应版本软件包（openjdk-8-jdk-headless）。</p>
    <section>
      <title>获取代码</title>
      <p>首先获取metasfresh-docker仓库代码，后续步骤中多有用及：</p>
      <screen>git clone https://github.com/metasfresh/metasfresh-docker.git</screen>
    </section>
    <section>
      <title>数据库配置</title>
      <p>执行以下命令创建并配置PostgreSQL数据库：</p>
      <screen>% initdb -D data -U postgres -A password -W
% pg_ctl -D data -l data/data.log start
% psql postgres postgres
# create role metasfresh with login password 'metasfresh' ;
# create database metasfresh with owner metasfresh ;</screen>
      <p>从<filepath>https://github.com/metasfresh/metasfresh/blob/master/Jenkinsfile</filepath>中找到数据库初始数据的链接并下载，如：</p>
      <screen>wget https://metasfresh.com/wp-content/releases/db_seeds/metasfresh_latest.pgdump</screen>
      <p>再执行以下命令导入初始数据：</p>
      <screen>pg_restore -j 8 -U metasfresh -d metasfresh metasfresh_latest.pgdump</screen>
      <p>基于以下命令下载数据迁移工具：</p>
      <screen>wget $(grep 'RUN curl' metasfresh-docker/docker-src/app/Dockerfile | cut -d' ' -f3 | sed -e 's/-dist.tar.gz/-sql-only.tar.gz/')</screen>
      <p>解压后，执行如下命令：</p>
      <screen><![CDATA[
cd dist/install
cat >settings.properties <<EOF
METASFRESH_DB_SERVER=localhost
METASFRESH_DB_PORT=5432
METASFRESH_DB_NAME=metasfresh
METASFRESH_DB_USER=metasfresh
METASFRESH_DB_PASSWORD=metasfresh
EOF
java -jar lib/de.metas.migration.cli.jar -s settings.properties
]]></screen>
    </section>
    <section>
      <title>RabbitMQ</title>
      <p>安装<codeph>rabbitmq-server</codeph>包，然后启动服务：</p>
      <screen>service rabbitmq-server start</screen>
    </section>
    <section>
      <title>Web UI服务</title>
      <p>拷贝相关文件：</p>
      <screen>cp -r metasfresh-docker/docker-src/webui/sources/dist webui
cp metasfresh-docker/docker-src/webui/sources/configs/config.js webui
cp metasfresh/frontend/favicon.png webui</screen>
      <p>调整config.js配置：</p>
      <screen>sed -i 's|http://MYDOCKERHOST:PORT||g' webui/config.js</screen>
      <p>设置404页面内容，以支持React页面跳转：</p>
      <screen>mkdir webui/error
ln webui/index.html webui/error/404.html</screen>
    </section>
    <section>
      <title>Web API服务</title>
      <p>基于以下命令创建服务配置文件：</p>
      <screen><![CDATA[sed -e "s/FOO_APP/localhost/g" -e "s/FOO_DBMS/localhost/g" metasfresh-docker/webapi/sources/configs/metasfresh.properties >metasfresh.properties]]></screen>
      <p>再据以下命令获取webapi服务包（基于<filepath>metasfresh-docker/docker-src/webapi/Dockerfile</filepath>文件中的地址）：</p>
      <screen>curl -o webapi.jar $(grep 'RUN curl' metasfresh-docker/docker-src/webapi/Dockerfile | cut -d' ' -f3)</screen>
      <p>创建<filepath>application.properties</filepath>，内容如下：</p>
      <codeblock>PropertyFile=metasfresh.properties
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientAutoConfiguration
spring.data.elasticsearch.repositories.enabled=false
spring.resources.static-locations=file:webui
spring.session.timeout=7200
webui.frontend.allow-cross-site-usage=true</codeblock>
      <p>运行服务：</p>
      <screen>/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java -Xmx1G -jar webapi.jar</screen>
    </section>
  </body>
</topic>
